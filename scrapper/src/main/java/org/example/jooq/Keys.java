/*
 * This file is generated by jOOQ.
 */
package org.example.jooq;


import javax.annotation.processing.Generated;

import org.example.jooq.tables.GithubLinkTable;
import org.example.jooq.tables.LinkTable;
import org.example.jooq.tables.UserLinksTable;
import org.example.jooq.tables.UserTable;
import org.example.jooq.tables.records.GithubLinkTableRecord;
import org.example.jooq.tables.records.LinkTableRecord;
import org.example.jooq.tables.records.UserLinksTableRecord;
import org.example.jooq.tables.records.UserTableRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<GithubLinkTableRecord> CONSTRAINT_B = Internal.createUniqueKey(GithubLinkTable.GITHUB_LINK_TABLE, DSL.name("CONSTRAINT_B"), new TableField[] { GithubLinkTable.GITHUB_LINK_TABLE.LINK_URL }, true);
    public static final UniqueKey<LinkTableRecord> CONSTRAINT_9 = Internal.createUniqueKey(LinkTable.LINK_TABLE, DSL.name("CONSTRAINT_9"), new TableField[] { LinkTable.LINK_TABLE.URL }, true);
    public static final UniqueKey<UserLinksTableRecord> UNIQUE_URL_AND_CHAT_ID = Internal.createUniqueKey(UserLinksTable.USER_LINKS_TABLE, DSL.name("UNIQUE_URL_AND_CHAT_ID"), new TableField[] { UserLinksTable.USER_LINKS_TABLE.LINK_URL, UserLinksTable.USER_LINKS_TABLE.USER_CHAT_ID }, true);
    public static final UniqueKey<UserTableRecord> CONSTRAINT_C = Internal.createUniqueKey(UserTable.USER_TABLE, DSL.name("CONSTRAINT_C"), new TableField[] { UserTable.USER_TABLE.CHAT_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<GithubLinkTableRecord, LinkTableRecord> CONSTRAINT_BC = Internal.createForeignKey(GithubLinkTable.GITHUB_LINK_TABLE, DSL.name("CONSTRAINT_BC"), new TableField[] { GithubLinkTable.GITHUB_LINK_TABLE.LINK_URL }, Keys.CONSTRAINT_9, new TableField[] { LinkTable.LINK_TABLE.URL }, true);
    public static final ForeignKey<UserLinksTableRecord, UserTableRecord> CONSTRAINT_6 = Internal.createForeignKey(UserLinksTable.USER_LINKS_TABLE, DSL.name("CONSTRAINT_6"), new TableField[] { UserLinksTable.USER_LINKS_TABLE.USER_CHAT_ID }, Keys.CONSTRAINT_C, new TableField[] { UserTable.USER_TABLE.CHAT_ID }, true);
    public static final ForeignKey<UserLinksTableRecord, LinkTableRecord> CONSTRAINT_6F = Internal.createForeignKey(UserLinksTable.USER_LINKS_TABLE, DSL.name("CONSTRAINT_6F"), new TableField[] { UserLinksTable.USER_LINKS_TABLE.LINK_URL }, Keys.CONSTRAINT_9, new TableField[] { LinkTable.LINK_TABLE.URL }, true);
}
